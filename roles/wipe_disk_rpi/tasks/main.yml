---
# Set up a (single) disk for Raspberry Pi data. This task will
# reformat the drive as btrfs, copy /var to the drive, and remount it
# as /var.

- name: Parition data drive
  block:
    - name: install and update basic packages
      community.general.packaging.os.pacman:
        name:
          - btrfs-progs
          - rsync
        extra_args: --noconfirm --needed

    - name: Wipe install drive and all its partitions
      ansible.builtin.command: wipefs --force --all  "{{ data_drive }}"

    - name: Create a new primary partition
      community.general.parted:
        device: "{{ data_drive }}"
        label: gpt
        name: data
        number: 1
        part_type: primary
        state: present
        fs_type: btrfs

    - name: Reboot for new partition
      ansible.builtin.reboot:

    - name: Create filesystem
      community.general.filesystem:
        fstype: btrfs
        dev: "{{ data_drive }}1"

  become: true
  become_user: root

- name: Copy current /var into data drive
  block:
    - name: Mount data drive on /mnt/var
      ansible.posix.mount:
        path: /mnt/var
        src: "{{ data_drive }}1"
        fstype: btrfs
        state: mounted

    # I suspect that the wipefs/repartition does not actually delete
    # files. I was having problems such that the (new)
    # /var/lib/pacman/local had some duplicate packages, which caused
    # pacman errors. The '--delete' flag seems to fix this.
    - name: Copy data to data drive
      ansible.builtin.command:
        cmd: /usr/bin/rsync -a --delete /var/ /mnt/var/

    - name: Umount from /mnt/var
      ansible.posix.mount:
        path: /mnt/var
        src: "{{ data_drive }}1"
        state: absent

    - name: Mount data to /var
      ansible.posix.mount:
        path: /var
        src: "{{ data_drive }}1"
        fstype: btrfs
        state: present

    - name: Reboot for new partition
      ansible.builtin.reboot:

  become: true
  become_user: root
